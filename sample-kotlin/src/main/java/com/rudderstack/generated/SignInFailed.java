/**
 * This client was automatically generated by RudderStack Typewriter. ** Do Not Edit **
 */
package com.rudderstack.generated;

import java.util.*;
import com.rudderstack.android.sdk.core.RudderProperty;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;

public final class SignInFailed extends SerializableProperties {
    private RudderProperty properties;

    private SignInFailed(RudderProperty properties) {
        this.properties = properties;
    }

    protected RudderProperty toRudderProperty() {
        return properties;
    }

    /**
     * Builder for {@link SignInFailed}
     */
    public static class Builder {
        private RudderProperty properties;

        /**
         * Builder for {@link SignInFailed}
         */
        public Builder() {
            properties = new RudderProperty();
        }

        /**
         * This property is optional and not required to generate a valid SignInFailed object
         */
        public Builder dimensions(final @Nullable Dimensions dimensions) {
            if (dimensions != null) {
                properties.putValue("dimensions", dimensions.toRudderProperty());
            } else {
                properties.put("dimensions", dimensions);
            }

            return this;
        }

        /**
         * The user's ID.
         * This property is required to generate a valid SignInFailed object
         */
        public Builder id(final @NonNull String id) {
            properties.put("id", id);
            
            return this;
        }

        /**
         * How many times the user has attempted to sign-in.
         * This property is optional and not required to generate a valid SignInFailed object
         */
        public Builder numAttempts(final @Nullable Long numAttempts) {
            properties.put("numAttempts", numAttempts);
            
            return this;
        }

        /**
         * Whether the user has indicated that the browser should store their login credentials.
         * This property is optional and not required to generate a valid SignInFailed object
         */
        public Builder rememberMe(final @Nullable Boolean rememberMe) {
            properties.put("rememberMe", rememberMe);
            
            return this;
        }

        /**
         * Build an instance of {@link SignInFailed}
         */
        public SignInFailed build() {
            if(properties.getProperty("id") == null){
                throw new IllegalArgumentException("SignInFailed missing required property: id");
            }
            return new SignInFailed(properties);
        }
    }
}
