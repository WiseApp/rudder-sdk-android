/**
 * This client was automatically generated by RudderStack Typewriter. ** Do Not Edit **
 */
package com.rudderstack.generated;

import java.util.*;
import com.rudderstack.android.sdk.core.RudderProperty;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;

public final class Dimensions extends SerializableProperties {
    private RudderProperty properties;

    private Dimensions(RudderProperty properties) {
        this.properties = properties;
    }

    protected RudderProperty toRudderProperty() {
        return properties;
    }

    /**
     * Builder for {@link Dimensions}
     */
    public static class Builder {
        private RudderProperty properties;

        /**
         * Builder for {@link Dimensions}
         */
        public Builder() {
            properties = new RudderProperty();
        }

        /**
         * This property is required to generate a valid Dimensions object
         */
        public Builder height(final @NonNull Double height) {
            properties.put("height", height);
            
            return this;
        }

        /**
         * This property is required to generate a valid Dimensions object
         */
        public Builder length(final @NonNull Double length) {
            properties.put("length", length);
            
            return this;
        }

        /**
         * This property is required to generate a valid Dimensions object
         */
        public Builder width(final @NonNull Double width) {
            properties.put("width", width);
            
            return this;
        }

        /**
         * Build an instance of {@link Dimensions}
         */
        public Dimensions build() {
            if(properties.getProperty("height") == null){
                throw new IllegalArgumentException("Dimensions missing required property: height");
            }
            if(properties.getProperty("length") == null){
                throw new IllegalArgumentException("Dimensions missing required property: length");
            }
            if(properties.getProperty("width") == null){
                throw new IllegalArgumentException("Dimensions missing required property: width");
            }
            return new Dimensions(properties);
        }
    }
}
